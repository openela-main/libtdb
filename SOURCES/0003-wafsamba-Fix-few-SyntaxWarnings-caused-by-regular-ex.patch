From 87dfb0ce329447625050771fd83dae1841ece1b8 Mon Sep 17 00:00:00 2001
From: Lukas Slebodnik <lslebodn@fedoraproject.org>
Date: Wed, 12 Jun 2019 13:38:17 +0200
Subject: [PATCH] wafsamba: Fix few SyntaxWarnings caused by regular
 expressions

./buildtools/wafsamba/samba_utils.py:258: SyntaxWarning: invalid escape sequence \$
  lst = re.split('(\$\{\w+\})', string)
./buildtools/wafsamba/samba_utils.py:261: SyntaxWarning: invalid escape sequence \$
  if re.match('\$\{\w+\}', v):
./buildtools/wafsamba/samba_cross.py:80: SyntaxWarning: invalid escape sequence \(
  m = re.match('\(\s*(-?\d+)\s*,\s*\"(.*)\"\s*\)', ans)
./buildtools/wafsamba/samba_conftests.py:400: SyntaxWarning: invalid escape sequence \s
  m = re.search('MAN%sEXT\s+=\s+(\w+)' % section, man)
./buildtools/wafsamba/samba_abi.py:24: SyntaxWarning: invalid escape sequence \$
  sig = re.sub('^\$[0-9]+\s=\s\{(.+)\}$', r'\1', sig)
./buildtools/wafsamba/samba_abi.py:25: SyntaxWarning: invalid escape sequence \$
  sig = re.sub('^\$[0-9]+\s=\s\{(.+)\}(\s0x[0-9a-f]+\s<\w+>)+$', r'\1', sig)
./buildtools/wafsamba/samba_abi.py:26: SyntaxWarning: invalid escape sequence \$
  sig = re.sub('^\$[0-9]+\s=\s(0x[0-9a-f]+)\s?(<\w+>)?$', r'\1', sig)
./buildtools/wafsamba/samba_abi.py:33: SyntaxWarning: invalid escape sequence \*
  m = m.replace('*', '\*')
./buildtools/wafsamba/samba_abi.py:44: SyntaxWarning: invalid escape sequence \s
  sig = re.sub(',\s\.\.\.', '', sig)
./buildtools/wafsamba/samba_headers.py:22: SyntaxWarning: invalid escape sequence \s
  re_header = re.compile('^\s*#\s*include[ \t]*"([^"]+)"', re.I | re.M)
./buildtools/wafsamba/symbols.py:122: SyntaxWarning: invalid escape sequence \[
  re_sharedlib = re.compile(b'Shared library: \[(.*)\]')
./buildtools/wafsamba/symbols.py:124: SyntaxWarning: invalid escape sequence \[
  re_rpath     = re.compile(b'Library (rpath|runpath): \[(.*)\]')
./buildtools/wafsamba/pkgconfig.py:12: SyntaxWarning: invalid escape sequence \w
  a = re.split('(@\w+@)', s)
./buildtools/wafsamba/pkgconfig.py:17: SyntaxWarning: invalid escape sequence \w
  if re.match('@\w+@', v):
./buildtools/wafsamba/configure_file.py:16: SyntaxWarning: invalid escape sequence \w
  a = re.split('(@\w+@)', s)
./buildtools/wafsamba/configure_file.py:19: SyntaxWarning: invalid escape sequence \w
  if re.match('@\w+@', v):
---
 buildtools/wafsamba/configure_file.py  |  4 ++--
 buildtools/wafsamba/pkgconfig.py       |  4 ++--
 buildtools/wafsamba/samba_abi.py       | 12 ++++++------
 buildtools/wafsamba/samba_conftests.py |  2 +-
 buildtools/wafsamba/samba_cross.py     |  2 +-
 buildtools/wafsamba/samba_headers.py   |  2 +-
 buildtools/wafsamba/samba_utils.py     |  4 ++--
 buildtools/wafsamba/symbols.py         |  4 ++--
 8 files changed, 17 insertions(+), 17 deletions(-)

Index: talloc-2.4.0/buildtools/wafsamba/configure_file.py
===================================================================
--- talloc-2.4.0.orig/buildtools/wafsamba/configure_file.py	2023-01-19 08:26:14.036738067 +0100
+++ talloc-2.4.0/buildtools/wafsamba/configure_file.py	2023-01-19 08:26:20.706716759 +0100
@@ -13,10 +13,10 @@ def subst_at_vars(task):
     s = task.inputs[0].read()
 
     # split on the vars
-    a = re.split('(@\w+@)', s)
+    a = re.split(r'(@\w+@)', s)
     out = []
     for v in a:
-        if re.match('@\w+@', v):
+        if re.match(r'@\w+@', v):
             vname = v[1:-1]
             if not vname in task.env and vname.upper() in task.env:
                 vname = vname.upper()
Index: talloc-2.4.0/buildtools/wafsamba/pkgconfig.py
===================================================================
--- talloc-2.4.0.orig/buildtools/wafsamba/pkgconfig.py	2023-01-19 08:26:14.037738063 +0100
+++ talloc-2.4.0/buildtools/wafsamba/pkgconfig.py	2023-01-19 08:26:20.706716759 +0100
@@ -9,12 +9,12 @@ def subst_at_vars(task):
 
     s = task.inputs[0].read()
     # split on the vars
-    a = re.split('(@\w+@)', s)
+    a = re.split(r'(@\w+@)', s)
     out = []
     done_var = {}
     back_sub = [ ('PREFIX', '${prefix}'), ('EXEC_PREFIX', '${exec_prefix}')]
     for v in a:
-        if re.match('@\w+@', v):
+        if re.match(r'@\w+@', v):
             vname = v[1:-1]
             if not vname in task.env and vname.upper() in task.env:
                 vname = vname.upper()
Index: talloc-2.4.0/buildtools/wafsamba/samba_abi.py
===================================================================
--- talloc-2.4.0.orig/buildtools/wafsamba/samba_abi.py	2023-01-19 08:26:14.037738063 +0100
+++ talloc-2.4.0/buildtools/wafsamba/samba_abi.py	2023-01-19 08:26:20.706716759 +0100
@@ -21,16 +21,16 @@ version_key = lambda x: list(map(int, x.
 def normalise_signature(sig):
     '''normalise a signature from gdb'''
     sig = sig.strip()
-    sig = re.sub('^\$[0-9]+\s=\s\{(.+)\}$', r'\1', sig)
-    sig = re.sub('^\$[0-9]+\s=\s\{(.+)\}(\s0x[0-9a-f]+\s<\w+>)+$', r'\1', sig)
-    sig = re.sub('^\$[0-9]+\s=\s(0x[0-9a-f]+)\s?(<\w+>)?$', r'\1', sig)
-    sig = re.sub('0x[0-9a-f]+', '0xXXXX', sig)
+    sig = re.sub(r'^\$[0-9]+\s=\s\{(.+)\}$', r'\1', sig)
+    sig = re.sub(r'^\$[0-9]+\s=\s\{(.+)\}(\s0x[0-9a-f]+\s<\w+>)+$', r'\1', sig)
+    sig = re.sub(r'^\$[0-9]+\s=\s(0x[0-9a-f]+)\s?(<\w+>)?$', r'\1', sig)
+    sig = re.sub(r'0x[0-9a-f]+', '0xXXXX', sig)
     sig = re.sub('", <incomplete sequence (\\\\[a-z0-9]+)>', r'\1"', sig)
 
     for t in abi_type_maps:
         # we need to cope with non-word characters in mapped types
         m = t
-        m = m.replace('*', '\*')
+        m = m.replace('*', r'\*')
         if m[-1].isalnum() or m[-1] == '_':
             m += '\\b'
         if m[0].isalnum() or m[0] == '_':
@@ -41,7 +41,7 @@ def normalise_signature(sig):
 
 def normalise_varargs(sig):
     '''cope with older versions of gdb'''
-    sig = re.sub(',\s\.\.\.', '', sig)
+    sig = re.sub(r',\s\.\.\.', '', sig)
     return sig
 
 
Index: talloc-2.4.0/buildtools/wafsamba/samba_conftests.py
===================================================================
--- talloc-2.4.0.orig/buildtools/wafsamba/samba_conftests.py	2023-01-19 08:26:14.038738060 +0100
+++ talloc-2.4.0/buildtools/wafsamba/samba_conftests.py	2023-01-19 08:26:20.706716759 +0100
@@ -398,7 +398,7 @@ WriteMakefile(
 
     if section:
         man = Utils.readf(os.path.join(bdir,'Makefile'))
-        m = re.search('MAN%sEXT\s+=\s+(\w+)' % section, man)
+        m = re.search(r'MAN%sEXT\s+=\s+(\w+)' % section, man)
         if not m:
             conf.end_msg('not found', color='YELLOW')
             return
Index: talloc-2.4.0/buildtools/wafsamba/samba_headers.py
===================================================================
--- talloc-2.4.0.orig/buildtools/wafsamba/samba_headers.py	2023-01-19 08:26:14.039738057 +0100
+++ talloc-2.4.0/buildtools/wafsamba/samba_headers.py	2023-01-19 08:26:20.707716756 +0100
@@ -19,7 +19,7 @@ def header_install_path(header, header_p
     return ''
 
 
-re_header = re.compile('^\s*#\s*include[ \t]*"([^"]+)"', re.I | re.M)
+re_header = re.compile(r'^\s*#\s*include[ \t]*"([^"]+)"', re.I | re.M)
 
 # a dictionary mapping source header paths to public header paths
 header_map = {}
Index: talloc-2.4.0/buildtools/wafsamba/samba_utils.py
===================================================================
--- talloc-2.4.0.orig/buildtools/wafsamba/samba_utils.py	2023-01-19 08:26:14.040738054 +0100
+++ talloc-2.4.0/buildtools/wafsamba/samba_utils.py	2023-01-19 08:26:20.707716756 +0100
@@ -237,10 +237,10 @@ def TO_LIST(str, delimiter=None):
 
 def subst_vars_error(string, env):
     '''substitute vars, throw an error if a variable is not defined'''
-    lst = re.split('(\$\{\w+\})', string)
+    lst = re.split(r'(\$\{\w+\})', string)
     out = []
     for v in lst:
-        if re.match('\$\{\w+\}', v):
+        if re.match(r'\$\{\w+\}', v):
             vname = v[2:-1]
             if not vname in env:
                 raise KeyError("Failed to find variable %s in %s in env %s <%s>" % (vname, string, env.__class__, str(env)))
Index: talloc-2.4.0/buildtools/wafsamba/symbols.py
===================================================================
--- talloc-2.4.0.orig/buildtools/wafsamba/symbols.py	2023-01-19 08:26:14.041738051 +0100
+++ talloc-2.4.0/buildtools/wafsamba/symbols.py	2023-01-19 08:26:20.707716756 +0100
@@ -119,9 +119,9 @@ def find_ldd_path(bld, libname, binary):
 
 
 # some regular expressions for parsing readelf output
-re_sharedlib = re.compile(b'Shared library: \[(.*)\]')
+re_sharedlib = re.compile(r'Shared library: \[(.*)\]')
 # output from readelf could be `Library rpath` or `Libray runpath`
-re_rpath     = re.compile(b'Library (rpath|runpath): \[(.*)\]')
+re_rpath     = re.compile(r'Library (rpath|runpath): \[(.*)\]')
 
 def get_libs(bld, binname):
     '''find the list of linked libraries for any binary or library
